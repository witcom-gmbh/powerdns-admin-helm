# Default values for powerdns-admin.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: powerdnsadmin/pda-legacy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""


## Database configuration
database:
  # -- Database type for powerdnsadmin. See https://docs.sqlalchemy.org/en/20/core/engines.html#supported-databases
  # @section -- Database configuration
  type: "postgres"
  # -- database-host for powerdns-admin
  # @section -- Database configuration
  host: ""
  # -- database-port for powerdns-admin
  # @section -- Database configuration
  port: ""
  # -- database-user for powerdns-admin
  # @section -- Database configuration
  user: ""
  # -- database-name for powerdns-admin
  # @section -- Database configuration
  database: ""
  # -- database-password for powerdns-admin
  # @section -- Database configuration
  password: ""
  # -- database-configuration can also be provided by an existing secret
  # @section -- Database configuration
  existingSecret: ""
  # -- Key of database-host in existing secret. If no key is given `database.host` is used
  # @section -- Database configuration
  existingSecretHostKey: ""
  # -- Key of database-port in existing secret. If no key is given `database.port` is used
  # @section -- Database configuration
  existingSecretPortKey: ""
  # -- Key of database-user in existing secret. If no key is given `database.user` is used
  # @section -- Database configuration
  existingSecretUserKey: ""
  # -- Key of database-name in existing secret. If no key is given `database.database` is used
  # @section -- Database configuration
  existingSecretDatabaseKey: ""
  # -- Key of database-password in existing secret. If no key is given `database.password` is used
  # @section -- Database configuration
  existingSecretPasswordKey: ""

# -- Session-key for web-app. Will be autogenerated if empty. See https://flask.palletsprojects.com/en/1.1.x/config/#SECRET_KEY
# @section -- Application configuration
sessionKey: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9191

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: 80
  failureThreshold: 5
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /
    port: 80
  failureThreshold: 5
  periodSeconds: 10

startupProbe:
  httpGet:
    path: /
    port: 80
  initialDelaySeconds: 5
  failureThreshold: 30
  periodSeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
